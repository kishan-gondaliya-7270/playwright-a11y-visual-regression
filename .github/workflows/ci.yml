name: Playwright-Framework CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3. Install dependencies
      - name: Install dependencies from package-lock.json
        run: npm ci

      # 4. Run TypeScript compilation check
      - name: Check TypeScript compilation
        run: npm run tsc

      # 5. Run formatting and linting checks (do not fail on errors)
      - name: Check formatting with Prettier
        run: |
          npm run format:check || echo "Prettier check failed, please fix it... "

      - name: Run linting check with eslint
        run: |
          npm run lint || echo "Linting failed, please fix it... "

      # 6. Install Playwright browsers
      - name: Install Playwright browsers
        run: npm run install:browsers

      # 7. Run Playwright tests # customize as needed
      - name: Run Playwright Functional Tests
        run: npm run test:default-ci
        continue-on-error: true

      # 8. Run Accessibility Tests
      - name: Run Accessibility Tests
        run: |
          mkdir -p accessibility-report
          REPORT_DIR=accessibility-report npm run test:accessibility
        continue-on-error: true

      # 9. Run Visual Tests
      - name: Run Visual Tests
        run: npm run test:visual
        continue-on-error: true

      # 10. Generate Allure Report
      - name: Generate Allure Report
        run: |
          npx allure generate allure-results --single-file --clean -o allure-report
        if: always()

      # 11. Upload Artifact

      - name: Upload visual test snapshots
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-snapshots
          path: src/tests/visual/**/visual.*.spec.ts-snapshots/
          overwrite: true

      - name: Upload Accessibility Reports
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: accessibility-report
          path: accessibility-report
          overwrite: true

      - name: Upload Allure Report as Artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
          overwrite: true

      - name: Prepare Reports Directory
        run: |
          mkdir -p reports/allure-report
          mkdir -p reports/accessibility-report
          cp -r allure-report/* reports/allure-report/ || echo "No allure report found!"
          cp -r accessibility-report/* reports/accessibility-report/ || echo "No accessibility report found!"
          # Create index.html with styling
          cat > reports/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Test Reports</title>
            <style>
              body {
                font-family: Arial, sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f9;
                color: #333;
              }
              header {
                background-color: #4CAF50;
                color: white;
                padding: 15px;
                text-align: center;
              }
              main {
                max-width: 800px;
                margin: 20px auto;
                padding: 20px;
                background-color: white;
                border-radius: 8px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
              }
              h1 {
                font-size: 24px;
                text-align: center;
                margin-bottom: 20px;
              }
              ul {
                list-style-type: none;
                padding: 0;
              }
              li {
                margin: 10px 0;
              }
              a {
                display: inline-block;
                text-decoration: none;
                color: #4CAF50;
                font-size: 18px;
                padding: 10px 15px;
                border: 2px solid #4CAF50;
                border-radius: 4px;
                transition: background-color 0.3s, color 0.3s;
              }
              a:hover {
                background-color: #4CAF50;
                color: white;
              }
            </style>
          </head>
          <body>
            <header>
              <h1>Test Reports</h1>
            </header>
            <main>
              <h1>Available Reports</h1>
              <ul>
                <li><a href="allure-report/index.html" target="_blank">Allure Report</a></li>
                <li><a href="accessibility-report/login-page.html" target="_blank">Accessibility Report - Login Page</a></li>
                <li><a href="accessibility-report/inventory-page.html" target="_blank">Accessibility Report - Inventory Page</a></li>
              </ul>
            </main>
          </body>
          </html>
          EOF
          ls -R reports # Optional: Debug to verify structure

        # 12. Deploy Reports to gh-page-reports Branch
      - name: Deploy Reports to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: reports
          publish_branch: gh-pages
        env:
          PUBLISH_DIRS: |
            allure-report:/allure-report
            accessibility-report:/accessibility-report
